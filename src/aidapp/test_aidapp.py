"""Test the core functionality of AIDApp."""
from unittest.mock import MagicMock, Mock

from main import AIDApp

mocked_input = MagicMock()

aidapp = AIDApp()

PUSHOVER_X = """
0
0,0015
0,003
0,0045
0,006
0,0075
0,009
0,0105
0,012
0,0135
0,015
0,0165
0,018
0,0195
0,021
0,0225
0,024
0,0255
0,027
0,0285
0,03
0,0315
0,033
0,0345
0,036
0,0375
0,039
0,0405
0,042
0,0435
0,045
0,0465
0,048
0,0495
0,051
0,0525
0,054
0,0555
0,057
0,0585
0,06
0,0615
0,063
0,0645
0,066
0,0675
0,069
0,0705
0,072
0,0735
0,075
0,0765
0,078
0,0795
0,081
0,0825
0,084
0,0855
0,087
0,0885
0,09
0,0915
0,093
0,0945
0,096
0,0975
0,099
0,1005
0,102
0,1035
0,105
0,1065
0,108
0,1095
0,111
0,1125
0,114
0,1155
0,117
0,1185
0,12
0,1215
0,123
0,1245
0,126
0,1275
0,129
0,1305
0,132
0,1335
0,135
0,1365
0,138
0,1395
0,141
0,1425
0,144
0,1455
0,147
0,1485
0,15
0,1515
0,153
0,1545
0,156
0,1575
0,159
0,1605
0,162
0,1635
0,165
0,1665
0,168
0,1695
0,171
0,1725
0,174
0,1755
0,177
0,1785
0,18
0,1815
0,183
0,1845
0,186
0,1875
0,189
0,1905
0,192
0,1935
0,195
0,1965
0,198
0,1995
0,201
0,2025
0,204
0,2055
0,207
0,2085
0,21
0,2115
0,213
0,2145
0,216
0,2175
0,219
0,2205
0,222
0,2235
0,225
0,2265
0,228
0,2295
0,231
0,2325
0,234
0,2355
0,237
0,2385
0,24
0,2415
0,243
0,2445
0,246
0,2475
0,249
0,2505
0,252
0,2535
0,255
0,2565
0,258
0,2595
0,261
0,2625
0,264
0,2655
0,267
0,2685
0,27
0,2715
0,273
0,2745
0,276
0,2775
0,279
0,2805
0,282
0,2835
0,285
0,2865
0,288
0,2895
0,291
0,2925
0,294
0,2955
0,297
0,2985
0,3
"""

PUSHOVER_Y = """
0
55,59392236
109,3670878
163,8144485
217,9946123
271,7769626
325,084561
377,7927553
429,8717245
481,2994009
531,9982497
581,9974955
631,3424664
680,0761048
728,2431423
775,9390065
823,2054469
870,0901772
916,6468754
962,9113269
1008,925281
1054,718559
1100,309054
1145,714658
1190,947299
1236,042764
1280,989123
1325,83409
1370,571701
1415,190028
1459,671178
1503,98533
1548,078805
1591,856177
1635,108698
1677,567977
1718,798627
1758,329475
1795,951772
1831,743054
1865,953817
1898,888238
1930,910133
1962,281928
1993,194479
2023,689533
2053,7492
2083,266123
2112,126982
2140,278098
2167,755258
2194,624067
2220,944168
2246,751347
2272,081387
2296,982004
2321,536696
2345,834927
2369,936338
2393,900573
2417,739559
2441,465224
2465,083534
2488,576595
2511,92055
2535,055758
2557,92854
2580,455398
2602,546867
2624,125414
2645,083681
2665,302386
2684,680135
2703,133431
2720,632451
2737,236839
2753,065877
2768,310423
2783,191151
2797,809453
2812,266721
2826,616634
2840,889011
2855,07789
2869,183269
2883,211113
2897,095817
2910,795629
2924,376157
2937,831437
2951,125682
2964,264858
2977,237036
2990,012394
3002,567076
3014,865297
3026,889164
3038,608855
3049,982622
3060,986607
3071,596954
3081,759984
3091,469734
3100,726202
3109,553247
3117,968761
3125,990637
3133,666587
3141,068184
3148,24314
3155,221277
3162,026452
3168,694449
3175,237198
3181,684519
3188,048342
3194,340593
3200,561274
3206,722313
3212,811782
3218,829679
3224,776006
3230,620941
3236,364485
3242,012601
3247,553361
3252,992729
3258,306849
3263,507648
3268,583199
3273,521573
3278,316805
3282,94504
3287,406276
3291,688586
3295,791969
3299,716425
3303,479848
3307,106093
3310,624983
3314,060374
3317,436122
3320,758192
3324,044477
3327,300941
3330,527584
3333,73037
3336,909299
3340,064371
3343,189622
3346,291016
3349,368554
3352,41627
3355,416272
3358,380489
3361,314885
3364,213496
3367,08825
3369,933183
3372,754259
3375,545513
3378,306947
3381,044524
3383,746315
3386,418286
3389,060435
3391,666799
3394,243342
3396,790064
3399,295036
3401,764223
3404,197624
3406,589277
3408,939179
3411,253296
3413,513735
3415,726461
3417,891473
3420,008771
3422,066426
3424,070404
3426,01474
3427,905397
3429,742377
3431,519714
3433,249338
3434,91932
3436,535623
3438,098249
3439,607196
3441,056502
3442,458093
3443,800043
3445,094278
3446,346764
3447,545573
3448,702631
3449,81794
3450,8915
3451,929274
3452,943191
"""

def test_main():
    """Test the main function."""
    arg_dp = 0.058661392,
    arg_mu_DB = 6,
    arg_k_DB = 1,
    arg_Kf = 0.66,
    arg_storey_masses = [
        239.6789,
        231.4220183,
        223.1651376,
        223.1651,
        223.1651,
        124.3884,
    ],
    arg_eigenvalues = [
        0.113530691,
        0.326058618,
        0.581763429,
        0.79237523,
        0.932777869,
        1,
    ],
    arg_brace_number = [
        4,
        4,
        4,
        4,
        4,
        4,
    ],
    arg_path_zonation =[
        """
        0.067
        0.091
        0.109
        0.130
        0.153
        0.182
        0.265
        0.354
        0.501
        """,

        """
        2.308
        2.276
        2.282
        2.298
        2.330
        2.354
        2.423
        2.470
        2.510
        """,

        """
        0.279
        0.295
        0.314
        0.321
        0.328
        0.339
        0.366
        0.390
        0.439
        """
    ],
    arg_pushover_x = PUSHOVER_X,
    arg_pushover_y = PUSHOVER_Y,
    arg_span_length = 5,
    arg_interfloor_height = 3,
    arg_nominal_age = 50,
    arg_functional_class = "II",
    arg_topographic_factor = "T2",
    arg_soil_class = "C",
    arg_limit_state = "SLV",
    arg_damping_coeff = 5,

    assert aidapp.main(
        arg_dp,
        arg_mu_DB,
        arg_k_DB,
        arg_Kf,
        arg_storey_masses,
        arg_eigenvalues,
        arg_brace_number,
        arg_path_zonation,
        arg_pushover_x,
        arg_pushover_y,
        arg_span_length,
        arg_interfloor_height,
        arg_nominal_age,
        arg_functional_class,
        arg_topographic_factor,
        arg_soil_class,
        arg_limit_state,
        arg_damping_coeff,
        
    ) == 5